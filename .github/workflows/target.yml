name: target
on:
  push:
    branches:
      - master
      - 'releases/**'
  pull_request_target:
jobs:
  dispatch:
    runs-on: ubuntu-latest
    outputs:
      hasWritePermission: ${{ contains(fromJson('["admin", "write"]'), steps.userPermission.outputs.user-permission) }}
    steps:
      - id: userPermission
        uses: actions-cool/check-user-permission@v2
      - run: |
          echo "user-permission: ${{ steps.userPermission.outputs.user-permission }}"
          echo "hasWritePermission: ${{ contains(fromJson('["admin", "write"]'), steps.userPermission.outputs.user-permission) }}"
  build:
    needs: dispatch
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    environment: ${{ github.event_name == 'pull_request_target' && !fromJson(needs.dispatch.outputs.hasWritePermission) && 'external' || 'CI' }}
    steps:
      - run: |
          echo "event name: ${{ github.event_name == 'pull_request_target' }}"
          echo "hasWritePermission: ${{ needs.dispatch.outputs.hasWritePermission }}"
          echo "not hasWritePermission: ${{ !fromJson(needs.dispatch.outputs.hasWritePermission) }}"
          echo "should use external: ${{ github.event_name == 'pull_request_target' && !fromJson(needs.dispatch.outputs.hasWritePermission) }}"
          echo "running environment: ${{ github.event_name == 'pull_request_target' && !fromJson(needs.dispatch.outputs.hasWritePermission) && 'external' || 'CI' }}"
      - run: |
          echo "github object:"
          echo "${{ toJson(github) }}"
      - run: |
          echo "event object:"
          echo "${{ toJson(github.event) }}"
      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request_target'
        with:
          ref: "refs/pull/${{ github.event.number }}/merge"
      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request_target'
      - uses: actions/setup-node@v4
      - run: npm ci
      - run: npm test
      - uses: romeovs/lcov-reporter-action@v0.4.0
        if: github.event_name == 'pull_request_target'
        with:
          github-token: ${{ secrets.COV_REPORT }}
